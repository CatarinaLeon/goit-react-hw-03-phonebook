{"version":3,"sources":["components/ContactForm/ContactForm.jsx","components/SearchFilter/SearchFilter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","services/localStorage.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["ContactForm","state","name","number","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","onSubmit","resetState","this","className","style","contactform","type","pattern","title","required","onChange","htmlFor","Component","Filter","filter","ContactList","contacts","onClick","handleDeleteBtn","map","id","App","addNewContact","contactName","nanoid","normalizedName","toLowerCase","find","contact","alert","deleteContact","prevState","filterContacts","includes","updateFilter","savedContacts","key","JSON","parse","localStorage","getItem","error","storage","prevProps","setItem","stringify","filteredContacts","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ada6f5ce.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport style from \"./ContactForm.module.css\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (event) => {\n    const { name, value } = event.target;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { name, number } = this.state;\n    this.props.onSubmit(name, number);\n    this.resetState();\n  };\n\n  resetState = () => {\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <div className={style.contactform}>\n        <form onSubmit={this.handleSubmit}>\n          <label>\n            Name\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n              required\n              onChange={this.handleChange}\n            />\n          </label>\n          <label htmlFor=\"\">\n            Number\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              required\n              onChange={this.handleChange}\n            />\n          </label>\n          <button type=\"submit\">Add contact</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\n\nconst Filter = ({ filter, onChange }) => (\n  <div>\n    <label>\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" value={filter} onChange={onChange} />\n    </label>\n  </div>\n);\n\nFilter.propTypes = {\n  filter: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\n\nconst ContactList = ({ contacts, onClick }) => {\n  const handleDeleteBtn = (event) => {\n    const { name } = event.target;\n    onClick(name);\n  };\n  return (\n    <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p> {name}</p>\n          <p> {number}</p>\n\n          <button type=\"button\" name={id} onClick={handleDeleteBtn}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n};\nexport default ContactList;\n","import React, { Component } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport ContactForm from \"../ContactForm/ContactForm.jsx\";\nimport Filter from \"../SearchFilter/SearchFilter.jsx\";\nimport ContactList from \"../ContactList/ContactList.jsx\";\nimport * as storage from \"../../services/localStorage\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const savedContacts = storage.get(\"contacts\");\n    if (savedContacts) {\n      this.setState({ contacts: savedContacts });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      storage.save(\"contacts\", contacts);\n    }\n  }\n\n  addNewContact = (name, number) => {\n    const contactName = { name, number, id: nanoid() };\n    const normalizedName = name.toLowerCase();\n    const duplicateName = this.state.contacts.find(\n      (contact) => contact.name.toLowerCase() === normalizedName\n    );\n\n    if (duplicateName) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    if (name === \"\") {\n      alert(`Please type your info in the field. It is empty.`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [...contacts, contactName],\n      }));\n    }\n  };\n\n  deleteContact = (id) => {\n    this.setState((prevState) => ({\n      contacts: prevState.contacts.filter((contact) => contact.id !== id),\n    }));\n  };\n\n  filterContacts = () => {\n    const { filter, contacts } = this.state;\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  updateFilter = (event) => {\n    const { value } = event.target;\n    this.setState({ filter: value });\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.filterContacts();\n    return (\n      <>\n        <div>\n          <h1>Phonebook</h1>\n          <ContactForm onSubmit={this.addNewContact} />\n          <h2>Contacts</h2>\n          <Filter filter={filter} onChange={this.updateFilter} />\n          <ContactList\n            contacts={filteredContacts}\n            onClick={this.deleteContact}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default App;\n","// ф-ция сохранения в локал стор\nconst save = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    return null;\n  }\n};\n\n// ф-ция получения в локал стор (считывает данные и парсит их)\nconst get = (key) => {\n  try {\n    return JSON.parse(localStorage.getItem(key));\n  } catch (error) {\n    return null;\n  }\n};\n// ф-ция удаления с локал стор\nconst remove = (key) => {\n  try {\n    return localStorage.removeItem(key);\n  } catch (error) {\n    return null;\n  }\n};\n\nexport { get, save, remove };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactform\":\"ContactForm_contactform__1SQUS\"};"],"sourceRoot":""}